import sys
sys.path.append('../utils_lib')

import utils_lib.feature_extractor_layers as FeatureExtractorLayer #a little useless but better for refactor

all_feature_extract = [
   
    {#0
        "feature_layer"        : FeatureExtractorLayer.NoneLayer,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],
        "name"                 : "none",
        "description"          : "no operation\ninput => input",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    
    ################         COS   #####################
    {#1
        "feature_layer"        : FeatureExtractorLayer.D_FF_LinLayer_cos,
        "output_feature_nb"    : lambda order,input: ((order+1)**input),
        "order"                : [1,2,3,4,6],
        "name"                 : "dff",
        "description"          : "deterministic fourier feature, with linear layer (bad for power needed, but might be better on gpu), bad if n_input >>~ 20 \ninput => input",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#2
        "feature_layer"        : FeatureExtractorLayer.D_FLF_LinLayer_cos,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [3,4,5,6,8,10], #4/8>16>>all 8
        "name"                 : "dflf_ll",
        "description"          : "deterministic fourier light feature, with linear layer (bad for power needed, but might be better on gpu) \ninput => input",
        "power"                : 0,        
        "color"                : None,    
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#3
        "feature_layer"        : FeatureExtractorLayer.D_FLF_cos,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [8,16,64],
        "name"                 : "dflf",
        "description"          : "deterministic fourier light feature, with matrix layer (good for power needed, but might be worst on gpu) \ninput => input",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#4
        "feature_layer"        : FeatureExtractorLayer.R_FF_cos,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [64,256],#work on 4 #warnuing warning, order r_ff != order d_ff
        "name"                 : "rff",
        "description"          : "random fourier feature, with matrix layer (good for power needed, but might be worst on gpu) \ninput => input",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#5
        "feature_layer"        : FeatureExtractorLayer.R_FLF_cos,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [8,16], #work on 4
        "name"                 : "rflf",
        "description"          : "random fourier light feature, with matrix layer (good for power needed, but might be worst on gpu)\ninput => input",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#6
        "feature_layer"        : FeatureExtractorLayer.L_FF_cos,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [64,128,256],#256,512],#warnuing warning, order r_ff != order d_ff
        "name"                 : "lff",
        "description"          : "learned fourier feature, with matrix layer (bad for power needed, but might be better on gpu) \ninput => input",
        "power"                : 0,
        "color"                : None,

        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#7
        "feature_layer"        : FeatureExtractorLayer.L_FLF_cos,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16,64],#,128*0],
        "name"                 : "lflf",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#8
        "feature_layer"        : FeatureExtractorLayer.R_FLF_NNI_cos,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [8,16], #16,32,64,128
        "name"                 : "rflfnni",
        "description"          : "random fourier light feature, with neural network who focus on each input before global computaion, with matrix layer (good for power needed, but might be worst on gpu)\ninput => input",
        "power"                : 0,
        "color"                : "#009",
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#9
        "feature_layer"        : FeatureExtractorLayer.D_FLF_NNI_cos,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [8,16],
        "name"                 : "dflfnni",
        "description"          : "deterministic fourier light feature, with neural network who focus on each input before global computaion, with matrix layer (good for power needed, but might be worst on gpu)\ninput => input",
        "power"                : 0,
        "color"                : "#009",
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#10
        "feature_layer"        : FeatureExtractorLayer.L_FLF_NNI_cos,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [8,16],#work on 4
        "name"                 : "lflfnni",
        "description"          : "learned fourier light feature, with neural network who focus on each input before global computaion, with matrix layer (bad for power needed, but might be better on gpu)\ninput => input",
        "power"                : 0,
        "color"                : "#009",
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#11
        "feature_layer"        : FeatureExtractorLayer.L_FF_cos_cheat,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [64,128,256],#256,512],#warnuing warning, order r_ff != order d_ff
        "name"                 : "lff_bet",
        "description"          : "learned fourier feature, with matrix layer (bad for power needed, but might be better on gpu) \ninput => input",
        "power"                : 0,
        "color"                : None,

        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#12
        "feature_layer"        : FeatureExtractorLayer.L_FLF_cos_cheat,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16,64],#,128*0],
        "name"                 : "lflf_bet",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#13
        "feature_layer"        : FeatureExtractorLayer.L_FF_cos_weird,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [64,128,256],#256,512],#warnuing warning, order r_ff != order d_ff
        "name"                 : "lff_wei",
        "description"          : "learned fourier feature, with matrix layer (bad for power needed, but might be better on gpu) \ninput => input",
        "power"                : 0,
        "color"                : None,

        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#14
        "feature_layer"        : FeatureExtractorLayer.L_FLF_cos_weird,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16,64],#,128*0],
        "name"                 : "lflf_wei",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#15
        "feature_layer"        : FeatureExtractorLayer.L_FF_cos_sig,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [64,128,256],#256,512],#warnuing warning, order r_ff != order d_ff
        "name"                 : "lff_a",
        "description"          : "learned fourier feature, with matrix layer (bad for power needed, but might be better on gpu) \ninput => input",
        "power"                : 0,
        "color"                : None,

        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#16
        "feature_layer"        : FeatureExtractorLayer.L_FLF_cos_sig,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16,64],#,128*0],
        "name"                 : "lflf_a",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#17
        "feature_layer"        : FeatureExtractorLayer.L_FF_cos_relu,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [64,128,256],#256,512],#warnuing warning, order r_ff != order d_ff
        "name"                 : "lff_b",
        "description"          : "learned fourier feature, with matrix layer (bad for power needed, but might be better on gpu) \ninput => input",
        "power"                : 0,
        "color"                : None,

        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#18
        "feature_layer"        : FeatureExtractorLayer.L_FLF_cos_relu,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16,64],#,128*0],
        "name"                 : "lflf_b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#19
        "feature_layer"        : FeatureExtractorLayer.L_FF_cos_nude,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [64,128,256],#256,512],#warnuing warning, order r_ff != order d_ff
        "name"                 : "lff_c",
        "description"          : "learned fourier feature, with matrix layer (bad for power needed, but might be better on gpu) \ninput => input",
        "power"                : 0,
        "color"                : None,

        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#20
        "feature_layer"        : FeatureExtractorLayer.L_FLF_cos_nude,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16,64],#,128*0],
        "name"                 : "lflf_c",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#21
        "feature_layer"        : FeatureExtractorLayer.L_FF_cos_genius,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [64,128,256],#,128*0],
        "name"                 : "lff_gen",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#22
        "feature_layer"        : FeatureExtractorLayer.L_FLF_cos_genius,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "lflf_gen",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#23
        "feature_layer"        : FeatureExtractorLayer.L_FF_cos_stupid,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [64,128,256],#,128*0],
        "name"                 : "lff_stup",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#24
        "feature_layer"        : FeatureExtractorLayer.L_FLF_cos_stupid,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "lflf_stup",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },




    {#25
        "feature_layer"        : FeatureExtractorLayer.L_FF_cos_genius_a,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [64,128,256],#,128*0],
        "name"                 : "lff_gen_a",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#26
        "feature_layer"        : FeatureExtractorLayer.L_FLF_cos_genius_a,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "lflf_gen_a",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#27
        "feature_layer"        : FeatureExtractorLayer.L_FF_cos_stupid_a,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [64,128,256],#,128*0],
        "name"                 : "lff_stup_a",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#28
        "feature_layer"        : FeatureExtractorLayer.L_FLF_cos_stupid_a,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "lflf_stup_a",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },




    {#29
        "feature_layer"        : FeatureExtractorLayer.L_FF_cos_relu_a,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [64,128,256],#256,512],#warnuing warning, order r_ff != order d_ff
        "name"                 : "lff_ba",
        "description"          : "learned fourier feature, with matrix layer (bad for power needed, but might be better on gpu) \ninput => input",
        "power"                : 0,
        "color"                : None,

        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#30
        "feature_layer"        : FeatureExtractorLayer.L_FLF_cos_relu_a,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16,64],#,128*0],
        "name"                 : "lflf_ba",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#31
        "feature_layer"        : FeatureExtractorLayer.L_FF_cos_relu_b,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [64,128,256],#256,512],#warnuing warning, order r_ff != order d_ff
        "name"                 : "lff_bb",
        "description"          : "learned fourier feature, with matrix layer (bad for power needed, but might be better on gpu) \ninput => input",
        "power"                : 0,
        "color"                : None,

        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#32
        "feature_layer"        : FeatureExtractorLayer.L_FLF_cos_relu_b,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16,64],#,128*0],
        "name"                 : "lflf_bb",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#33
        "feature_layer"        : FeatureExtractorLayer.L_FLF_cos_relu_c,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [64,128,256],#256,512],#warnuing warning, order r_ff != order d_ff
        "name"                 : "lff_bc",
        "description"          : "learned fourier feature, with matrix layer (bad for power needed, but might be better on gpu) \ninput => input",
        "power"                : 0,
        "color"                : None,

        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#34
        "feature_layer"        : FeatureExtractorLayer.L_FLF_cos_relu_c,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16,64],#,128*0],
        "name"                 : "lflf_bc",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#35
        "feature_layer"        : FeatureExtractorLayer.L_FLF_cos_relu_d,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [64,128,256],#256,512],#warnuing warning, order r_ff != order d_ff
        "name"                 : "lff_bd",
        "description"          : "learned fourier feature, with matrix layer (bad for power needed, but might be better on gpu) \ninput => input",
        "power"                : 0,
        "color"                : None,

        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#36
        "feature_layer"        : FeatureExtractorLayer.L_FLF_cos_relu_d,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16,64],#,128*0],
        "name"                 : "lflf_bd",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#37
        "feature_layer"        : FeatureExtractorLayer.L_FLF_cos_relu_e,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [64,128,256],#256,512],#warnuing warning, order r_ff != order d_ff
        "name"                 : "lff_be",
        "description"          : "learned fourier feature, with matrix layer (bad for power needed, but might be better on gpu) \ninput => input",
        "power"                : 0,
        "color"                : None,

        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#38
        "feature_layer"        : FeatureExtractorLayer.L_FLF_cos_relu_e,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16,64],#,128*0],
        "name"                 : "lflf_be",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#39
        "feature_layer"        : FeatureExtractorLayer.outsider,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [2,4,8,16,32],#,128*0],
        "name"                 : "outsider",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#40
        "feature_layer"        : FeatureExtractorLayer.outsider2,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [2,4,8,16,32],#,128*0],
        "name"                 : "outsiderv",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#41
        "feature_layer"        : FeatureExtractorLayer.outsider3,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [2,4,8,16,32],#,128*0],
        "name"                 : "outsiderb",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#42
        "feature_layer"        : FeatureExtractorLayer.FFP,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [2,4,8],#,128*0],
        "name"                 : "FFP",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#43
        "feature_layer"        : FeatureExtractorLayer.FFP11,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [2,4,8],#,128*0],
        "name"                 : "FFP11v",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#44
        "feature_layer"        : FeatureExtractorLayer.FFP12,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [2,4,8],#,128*0],
        "name"                 : "FFP12v",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#45
        "feature_layer"        : FeatureExtractorLayer.FFP21,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [2,4,8],#,128*0],
        "name"                 : "FFP21v",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#46
        "feature_layer"        : FeatureExtractorLayer.FFP152,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [2,4,8],#,128*0],
        "name"                 : "FFP152v",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#47
        "feature_layer"        : FeatureExtractorLayer.mix_triangular,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [3,4,5,6],#,128*0],
        "name"                 : "MIX_TRIANGULAR",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#48
        "feature_layer"        : FeatureExtractorLayer.mix_triangular2,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [3,4,5,6],#,128*0],
        "name"                 : "MIX_TRIANGULAR2",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#49
        "feature_layer"        : FeatureExtractorLayer.mix_triangular3,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [3,4,5,6],#,128*0],
        "name"                 : "MIX_TRIANGULAR3",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#50
        "feature_layer"        : FeatureExtractorLayer.mix_triangular4,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [3,4,5,6],#,128*0],
        "name"                 : "MIX_TRIANGULAR4",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#51
        "feature_layer"        : FeatureExtractorLayer.mix_triangular5,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [3,4,5,6],#,128*0],
        "name"                 : "MIX_TRIANGULAR5",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#52
        "feature_layer"        : FeatureExtractorLayer.mix_triangular,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [8,12,16],#,128*0],
        "name"                 : "MIX_TRIANGULAR6",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#53
        "feature_layer"        : FeatureExtractorLayer.mix_triangular2,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [8,12,16],#,128*0],
        "name"                 : "MIX_TRIANGULAR7",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#54
        "feature_layer"        : FeatureExtractorLayer.mix_triangular3,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [8,12,16],#,128*0],
        "name"                 : "MIX_TRIANGULAR8",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#55
        "feature_layer"        : FeatureExtractorLayer.mix_triangular4,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [8,12,16],#,128*0],
        "name"                 : "MIX_TRIANGULAR9",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#56
        "feature_layer"        : FeatureExtractorLayer.mix_triangular5,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [8,12,16],#,128*0],
        "name"                 : "MIX_TRIANGULAR10",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#57
        "feature_layer"        : FeatureExtractorLayer.mix_triangular6,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [3,5,8,12],#,128*0],
        "name"                 : "MIX_TRIANGULAR11",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#58
        "feature_layer"        : FeatureExtractorLayer.mix_triangular7,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR12",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    
    {#59
        "feature_layer"        : FeatureExtractorLayer.mix_triangular8,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR13",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    
    {#60
        "feature_layer"        : FeatureExtractorLayer.mix_triangular9,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR14",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#61
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_1,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_1",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#62
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_2,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_2",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#63
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_3,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_3",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    {#64
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_4,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_4",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#65
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_5,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_5",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#66
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_6,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_6",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#67
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_7,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_7",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#68
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_8,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_8",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#69
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_9,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_9",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#70
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_10,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_10",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#71
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_11,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_11",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    
    {#72
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_12,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_12",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    {#73
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_13,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_13",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    {#74
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_14,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_14",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    {#75
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_15,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_15",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#76
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_1,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_1b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#77
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_2,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_2b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#78
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_3,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_3b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    {#79
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_4,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_4b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#80
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_5,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_5b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#81
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_6,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_6b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#82
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_7,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_7b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#83
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_8,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_8b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#84
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_9,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_9b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#85
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_10,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_10b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#86
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_11,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_11b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#87
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_12,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_12b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    {#88
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_13,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_13b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    {#89
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_14,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_14b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    {#90
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_15,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "MIX_TRIANGULAR_FULL_15b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    {#91
        "feature_layer"        : FeatureExtractorLayer.mix_gaussian_full_1,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_gaussian_full_1b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#92
        "feature_layer"        : FeatureExtractorLayer.mix_gaussian_full_2,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_gaussian_full_2b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#93
        "feature_layer"        : FeatureExtractorLayer.mix_gaussian_full_3,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_gaussian_full_3b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    {#94
        "feature_layer"        : FeatureExtractorLayer.mix_gaussian_full_4,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_gaussian_full_4b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#95
        "feature_layer"        : FeatureExtractorLayer.mix_gaussian_full_5,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_gaussian_full_5b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#96
        "feature_layer"        : FeatureExtractorLayer.mix_gaussian_full_6,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_gaussian_full_6b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#97
        "feature_layer"        : FeatureExtractorLayer.mix_gaussian_full_7,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_gaussian_full_7b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#98
        "feature_layer"        : FeatureExtractorLayer.mix_gaussian_full_8,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_gaussian_full_8b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#99
        "feature_layer"        : FeatureExtractorLayer.mix_gaussian_full_9,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_gaussian_full_9b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#100
        "feature_layer"        : FeatureExtractorLayer.mix_gaussian_full_10,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_gaussian_full_10b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#101
        "feature_layer"        : FeatureExtractorLayer.mix_gaussian_full_11,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_gaussian_full_11b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#102
        "feature_layer"        : FeatureExtractorLayer.mix_gaussian_full_12,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_gaussian_full_12b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    {#103
        "feature_layer"        : FeatureExtractorLayer.mix_gaussian_full_13,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_gaussian_full_13b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    {#104
        "feature_layer"        : FeatureExtractorLayer.mix_gaussian_full_14,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_gaussian_full_14b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    {#105
        "feature_layer"        : FeatureExtractorLayer.mix_gaussian_full_15,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_gaussian_full_15b",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#106
        "feature_layer"        : FeatureExtractorLayer.gaussian_test_layer1,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [2,4,8],#,128*0],
        "name"                 : "gaussian_test_layer1_",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#107
        "feature_layer"        : FeatureExtractorLayer.gaussian_test_layer2,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [2,4,8],#,128*0],
        "name"                 : "gaussian_test_layer2_",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#108
        "feature_layer"        : FeatureExtractorLayer.gaussian_test_layer3,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [2,4,8],#,128*0],
        "name"                 : "gaussian_test_layer3_",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    
    {#109
        "feature_layer"        : FeatureExtractorLayer.gaussian_test_layer1_bias,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [2,4,8],#,128*0],
        "name"                 : "gaussian_test_layer1_bias_",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#110
        "feature_layer"        : FeatureExtractorLayer.gaussian_test_layer2_bias,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [2,4,8],#,128*0],
        "name"                 : "gaussian_test_layer2_bias_",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#111
        "feature_layer"        : FeatureExtractorLayer.gaussian_test_layer3_bias,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [2,4,8],#,128*0],
        "name"                 : "gaussian_test_layer3_bias_",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#112
        "feature_layer"        : FeatureExtractorLayer.triangle_activation_1,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "triangle_activation_1_",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#113
        "feature_layer"        : FeatureExtractorLayer.triangle_activation_2,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "triangle_activation_2_",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#114
        "feature_layer"        : FeatureExtractorLayer.triangle_activation_3,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "triangle_activation_3_",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    {#115
        "feature_layer"        : FeatureExtractorLayer.mix_all_gaussian_01,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_gaussian_01",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#116
        "feature_layer"        : FeatureExtractorLayer.mix_all_gaussian_02,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_gaussian_02",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#117
        "feature_layer"        : FeatureExtractorLayer.mix_all_gaussian_03,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_gaussian_03",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#118
        "feature_layer"        : FeatureExtractorLayer.mix_all_gaussian_04,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_gaussian_04",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#119
        "feature_layer"        : FeatureExtractorLayer.mix_all_gaussian_05,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_gaussian_05",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },



    {#120
        "feature_layer"        : FeatureExtractorLayer.mix_all_triangle_01,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_triangle_01",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#121
        "feature_layer"        : FeatureExtractorLayer.mix_all_triangle_02,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_triangle_02",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#122
        "feature_layer"        : FeatureExtractorLayer.mix_all_triangle_03,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_triangle_03",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#123
        "feature_layer"        : FeatureExtractorLayer.mix_all_triangle_04,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_triangle_04",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#124
        "feature_layer"        : FeatureExtractorLayer.mix_all_triangle_05,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_triangle_05",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#125
        "feature_layer"        : FeatureExtractorLayer.mix_all_triangle_06,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_triangle_06",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#126
        "feature_layer"        : FeatureExtractorLayer.mix_all_triangle_07,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_triangle_07",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    {#127
        "feature_layer"        : FeatureExtractorLayer.mix_all_weird_acti_01,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_weird_acti_01",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#128
        "feature_layer"        : FeatureExtractorLayer.mix_all_weird_acti_02,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_weird_acti_02",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#129
        "feature_layer"        : FeatureExtractorLayer.mix_all_weird_acti_03,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_weird_acti_03",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#130
        "feature_layer"        : FeatureExtractorLayer.mix_all_weird_acti_04,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_weird_acti_04",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#131
        "feature_layer"        : FeatureExtractorLayer.mix_all_weird_acti_05,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_weird_acti_05",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    {#132
        "feature_layer"        : FeatureExtractorLayer.mix_all_weird_deter_01,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_weird_deter_01",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#133
        "feature_layer"        : FeatureExtractorLayer.mix_all_weird_deter_02,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_weird_deter_02",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#134
        "feature_layer"        : FeatureExtractorLayer.mix_all_weird_deter_03,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_weird_deter_03",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#135
        "feature_layer"        : FeatureExtractorLayer.mix_all_weird_deter_04,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_weird_deter_04",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#136
        "feature_layer"        : FeatureExtractorLayer.mix_all_weird_deter_05,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_weird_deter_05",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#137
        "feature_layer"        : FeatureExtractorLayer.mix_all_weird_deter_06,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_weird_deter_06",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#138
        "feature_layer"        : FeatureExtractorLayer.mix_all_weird_deter_07,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [4,8,16],#,128*0],
        "name"                 : "mix_all_weird_deter_07",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#139
        "feature_layer"        : FeatureExtractorLayer.siren_decompo_1,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "siren_decompo_1",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#140
        "feature_layer"        : FeatureExtractorLayer.siren_decompo_2,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "siren_decompo_2",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#141
        "feature_layer"        : FeatureExtractorLayer.siren_decompo_3,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "siren_decompo_3",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#142
        "feature_layer"        : FeatureExtractorLayer.siren_decompo_4,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "siren_decompo_4",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#143
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_seuil_1,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_triangular_full_seuil_1",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
        {#144
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_seuil_2,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_triangular_full_seuil_2",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#145
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_seuil_3,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_triangular_full_seuil_3",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#146
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_seuil_4,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_triangular_full_seuil_4",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#147
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_seuil_5,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_triangular_full_seuil_5",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#148
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_seuil_6,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_triangular_full_seuil_6",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#149
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_seuil_7,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_triangular_full_seuil_7",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#150
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_seuil_8,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_triangular_full_seuil_8",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#151
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_seuil_9,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_triangular_full_seuil_9",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#152
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_seuil_10,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_triangular_full_seuil_10",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#153
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_seuil_11,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_triangular_full_seuil_11",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#154
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_seuil_12,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_triangular_full_seuil_12",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#155
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_seuil_13,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_triangular_full_seuil_13",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#156
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_seuil_14,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_triangular_full_seuil_14",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#157
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_seuil_15,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_triangular_full_seuil_15",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#158
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_seuil_16,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_triangular_full_seuil_16",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#159
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_seuil_17,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_triangular_full_seuil_17",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#160
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_seuil_18,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_triangular_full_seuil_18",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#161
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_seuil_19,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_triangular_full_seuil_19",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#162
        "feature_layer"        : FeatureExtractorLayer.mix_triangular_full_seuil_20,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_triangular_full_seuil_20",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },




    {#163
        "feature_layer"        : FeatureExtractorLayer.traingular_seuil_dense_1,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "traingular_seuil_dense_1",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#164
        "feature_layer"        : FeatureExtractorLayer.traingular_seuil_dense_2,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "traingular_seuil_dense_2",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#165
        "feature_layer"        : FeatureExtractorLayer.traingular_seuil_dense_3,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "traingular_seuil_dense_3",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#166
        "feature_layer"        : FeatureExtractorLayer.traingular_seuil_dense_4,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "traingular_seuil_dense_4",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    {#167
        "feature_layer"        : FeatureExtractorLayer.mix_final_1,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_final_1",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    {#168
        "feature_layer"        : FeatureExtractorLayer.mix_final_2,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_final_2",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    {#169
        "feature_layer"        : FeatureExtractorLayer.mix_final_3,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [0],#,128*0],
        "name"                 : "mix_final_3",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },

    {#170
        "feature_layer"        : FeatureExtractorLayer.triangular_sinus,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [2,4,8],#,128*0],
        "name"                 : "triangular_sinus",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },


    {#171
        "feature_layer"        : FeatureExtractorLayer.D_TF_LinLayer,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [1,2,3,4],#,128*0],
        "name"                 : "D_TF_LinLayer",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },
    {#172
        "feature_layer"        : FeatureExtractorLayer.D_TLF_LinLayer,
        "output_feature_nb"    : lambda order,input: (order + input),
        "order"                : [3,4,6,8,10],#,128*0],
        "name"                 : "D_TLF_LinLayer",
        "description"          : "",
        "power"                : 0,
        "color"                : None,
        "obs_shape"            : {"range":0.5,"offset":0.5},
    },














    
    


]